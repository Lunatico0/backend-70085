<header class="bg-gray-800 w-full shadow-md">
  <!-- Sección superior del header con enlaces -->
  <nav class="container max-w-[80rem] w-3/4 mx-auto px-6 flex justify-between items-center">
    <div>
      <a href="/" class="text-lg text-white font-semibold">Shop</a>
    </div>
    <section class="flex justify-end items-center w-full max-w-6xl py-2 px-4">
      <div id="userData" class="flex flex-row-reverse items-center gap-6 relative">
      </div>
    </section>
  </nav>

  <!-- Sección de navegación -->
  <div class="bg-gray-900 min-w-full">
    <nav class="flex justify-between max-w-[1366px] md:max-w-screen-xl mx-auto py-4 px-4">
      <!-- Logo alineado a la izquierda -->
      <a href="/"
        class="text-white text-[clamp(1rem,2vw+1rem,2rem)] font-extrabold hover:text-gray-300 transition-colors">Productos</a>

      <!-- Menú de navegación -->
      <ul class="flex gap-1 items-center">
        {{#each categories}}
        <li class="relative group">
          <a href="?category={{this.categoriaId}}"
            class="text-white text-[clamp(.5rem,.6vw+0.5rem,1rem)] lg:font-medium hover:text-gray-300 transition-colors block px-4 py-2 whitespace-nowrap{{#ifCond ../currentCategory '==' this.categoriaId}} text-blue-500{{/ifCond}}">
            {{this.categoriaNombre}}
          </a>

          {{#if this.subcategorias}}
          <ul
            class="hidden w-full -mt-2 group-hover:block absolute bg-gray-800 p-4 pt-1.5 rounded shadow-lg space-y-2 min-w-max z-10">
            {{#each this.subcategorias}}
            <li>
              <a href="?category={{../categoriaId}}&subcategory={{this.subcategoriaId}}"
                class="text-white text-[clamp(0.875rem,1.5vw+0.25rem,1rem)] hover:text-gray-300 transition-colors block whitespace-nowrap{{#ifCond ../../currentSubCategory '==' this.subcategoriaId}} text-blue-400 font-bold{{/ifCond}}">
                {{this.subcategoriaNombre}}
              </a>
            </li>
            {{/each}}
          </ul>
          {{/if}}
        </li>
        {{/each}}
      </ul>
    </nav>
  </div>

</header>

<div
  class="flex md:flex-row flex-col text-xs md:text-base justify-between items-center max-w-[80rem] w-3/4 px-6 pt-2  mb-4">
  <form id="limitForm" action="?" class="flex gap-2 items-center">
    <label for="cant" class="text-white">Mostrando</label>
    <select name="limit" id="cant" class="bg-slate-300 border border-slate-400 rounded px-2 py-1">
      <option value="5" {{#ifCond limit '==' 5}}selected{{/ifCond}}>5</option>
      <option value="10" {{#ifCond limit '==' 10}}selected{{/ifCond}}>10</option>
      <option value="15" {{#ifCond limit '==' 15}}selected{{/ifCond}}>15</option>
      <option value="30" {{#ifCond limit '==' 30}}selected{{/ifCond}}>30</option>
      <option value="50" {{#ifCond limit '==' 50}}selected{{/ifCond}}>50</option>
      <option value="75" {{#ifCond limit '==' 75}}selected{{/ifCond}}>75</option>
      <option value="100" {{#ifCond limit '==' 100}}selected{{/ifCond}}>100</option>
      <option value="200" {{#ifCond limit '==' 200}}selected{{/ifCond}}>200</option>
    </select>
    <p class="text-white">productos</p>
  </form>

  <form id="sortForm" action="?" class="flex gap-2 items-center">
    <label for="by" class="text-white">Ordenar por</label>
    <select name="sort" id="by" class="bg-slate-300 border border-slate-400 rounded px-2 py-1">
      <option value="defa" {{#if (eq sort 'defa' )}}selected{{/if}}>Relevancia</option>
      <option value="price_asc" {{#if (eq sort 'price_asc' )}}selected{{/if}}>Menor precio</option>
      <option value="price_desc" {{#if (eq sort 'price_desc' )}}selected{{/if}}>Mayor precio</option>
      <option value="alpha_asc" {{#if (eq sort 'alpha_asc' )}}selected{{/if}}>Alfabético ascendente</option>
      <option value="alpha_desc" {{#if (eq sort 'alpha_desc' )}}selected{{/if}}>Alfabético descendente</option>
    </select>
</div>

<div class="flex text-xs md:text-sm justify-center w-3/4 items-center gap-2 flex-wrap">
  {{#each payload}}
  <div
    class="card flex flex-col justify-between bg-slate-600 rounded min-h-24 w-60 md:min-h-32 h-[380px] md:h-[400px] p-1">
    <div class="flex flex-col object-fill">
      <img src="{{modifyImageUrl this.thumbnails.[0] '240' '240'}}" class="w-full h-auto rounded-sm object-cover">
    </div>
    <div class="text-white flex flex-col gap-2">
      <h2 class="text-white text-lg md:text-xl leading-6 itemDescripcion"> {{this.title}} </h2>
      <h3 class="text-white text-xs md:text-sm leading-4">
        {{#each description}}
        {{#ifCond this.label '==' "MEDIDAS"}}
        {{this.label}}: {{this.value}}
        {{/ifCond}}
        {{/each}}
      </h3>
      <p class="text-white"> ${{formatNumber price 2}} </p>
    </div>
    <a class="bg-slate-400/90
    border-slate-400 border
    hover:bg-slate-500
    active:bg-slate-300
    active:text-black mt-1
    text-white addProduct cursor-pointer flex justify-center rounded" id="{{this._id}}">Agregar</a>
  </div>
  {{/each}}
</div>

<div class="flex flex-row gap-4 pt-4 botones pagination">
  <a id="prevPageLink" class="
  {{#if hasPrevPage}}
  bg-slate-400/90 border-slate-400 border hover:bg-slate-500 active:bg-slate-300 active:text-black text-white mt-2 px-2 py-1 rounded
  {{else}}
  bg-slate-400/90 border-slate-400 border hover:bg-slate-500 active:bg-slate-300 active:text-black text-white mt-2 px-2 py-1 rounded cursor-not-allowed opacity-50
  {{/if}}"
    href="{{#if hasPrevPage}}/products?page={{prevPage}}&limit={{limit}}{{#if sort}}&sort={{sort}}{{/if}}{{#if currentCategory}}&category={{currentCategory}}{{/if}}{{#if currentSubCategory}}&subcategory={{currentSubCategory}}{{/if}}{{/if}}">
    ◀️
  </a>

  {{#ifCond lastPage '>' 5}}
  {{#ifCond page '>=' 4}}
  <a id="prevEnumPageLink"
    href="/products?page=1&limit={{limit}}{{#if sort}}&sort={{sort}}{{/if}}{{#if currentCategory}}&category={{currentCategory}}{{/if}}{{#if currentSubCategory}}&subcategory={{currentSubCategory}}{{/if}}"
    class="bg-slate-400/90 border-slate-400 border hover:bg-slate-500 active:bg-slate-300 active:text-black text-white mt-2 px-2 py-1 rounded">
    1
  </a>
  {{#ifCond page '>' 4}}
  <p class="text-white px-2 pt-4">...</p>
  {{/ifCond}}
  {{/ifCond}}
  {{/ifCond}}

  {{#each totalPages}}
  <a href="/products?page={{this}}&limit={{../limit}}{{#if ../sort}}&sort={{../sort}}{{/if}}{{#if ../currentCategory}}&category={{../currentCategory}}{{/if}}{{#if ../currentSubCategory}}&subcategory={{../currentSubCategory}}{{/if}}"
    class=" bg-slate-400/90 border-slate-400 border hover:bg-slate-500 active:bg-slate-300 active:text-black text-white mt-2 px-2 py-1 rounded
    {{#if (eq this ../page)}}active{{/if}}">{{this}}</a>
  {{/each}}

  {{#ifCond lastPage '>' 5}}
  {{#ifCond page '<' (subtract lastPage 2)}} {{!-- <p>{{gt lastPage 5}}</p> prueba de booleanos
    <p>{{lt page (subtract lastPage 3)}}</p> --}}
    {{#ifCond page '<' (subtract lastPage 3)}} <p class="text-white px-2 pt-4">...</p>
      {{/ifCond}}
      <a id="nextPageLink"
        href="/products?page={{lastPage}}&limit={{limit}}{{#if sort}}&sort={{sort}}{{/if}}{{#if currentCategory}}&category={{currentCategory}}{{/if}}{{#if currentSubCategory}}&subcategory={{currentSubCategory}}{{/if}}"
        class="bg-slate-400/90 border-slate-400 border hover:bg-slate-500 active:bg-slate-300 active:text-black text-white mt-2 px-2 py-1 rounded">
        {{lastPage}}
      </a>
      {{/ifCond}}
      {{/ifCond}}

      <a id="nextEnumPageLink"
        class="{{#if hasNextPage}} bg-slate-400/90 border-slate-400 border hover:bg-slate-500 active:bg-slate-300 active:text-black text-white mt-2 px-2 py-1 rounded{{else}} buttons bg-slate-400/90 border-slate-400 border hover:bg-slate-500 active:bg-slate-300 active:text-black text-white mt-2 px-2 py-1 rounded cursor-not-allowed opacity-50{{/if}}"
        href="{{#if hasNextPage}}/products?page={{nextPage}}&limit={{limit}}{{#if sort}}&sort={{sort}}{{/if}}{{#if currentCategory}}&category={{currentCategory}}{{/if}}{{#if currentSubCategory}}&subcategory={{currentSubCategory}}{{/if}}{{/if}}">
        ▶️
      </a>
</div>

<script>
  const cantElement = document.getElementById('cant');
  const byElement = document.getElementById('by');
  const prevPageLinkElement = document.getElementById('prevPageLink');
  const nextPageLinkElement = document.getElementById('nextPageLink');
  const cartLink = document.getElementById("cartLink");
  const logProfile = document.getElementById("logProfile");
  const userData = document.getElementById("userData");

  if (cantElement) {
    cantElement.addEventListener('change', function () {
      let url = new URL(window.location.href);
      let cantValue = this.value;
      if (cantValue) {
        url.searchParams.set('limit', cantValue);
      }
      url.searchParams.set('page', 1);
      window.location.href = url.toString();
    });
  }

  if (byElement) {
    byElement.addEventListener('change', function () {
      let url = new URL(window.location.href);
      let sortValue = this.value;
      if (sortValue) {
        url.searchParams.set('sort', sortValue);
      }
      url.searchParams.set('page', 1);
      window.location.href = url.toString();
    });
  }

  if (prevPageLinkElement) {
    prevPageLinkElement.addEventListener('click', function (event) {
      if (this.classList.contains('cursor-not-allowed')) {
        event.preventDefault();
      }
    });
  }

  if (nextPageLinkElement) {
    nextPageLinkElement.addEventListener('click', function (event) {
      if (this.classList.contains('cursor-not-allowed')) {
        event.preventDefault();
      }
    });
  }

  let user;

  const main = async () => {
    let res;
    try {
      res = await fetch('http://localhost:8080/api/sessions/current', {
        method: 'GET',
        credentials: 'include',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (!res.ok) {
        setupAddButtons();
        return;
      }

      const responseData = await res.json();
      user = responseData;  // Asignar el usuario autenticado
      userLoged(user);  // Mostrar la información del usuario logueado
      setupAddButtons(); // Configurar los botones para agregar productos

    } catch (error) {
      console.error('Error handling the request:', error);
      setupAddButtons(); // Asegúrate de configurar los botones
    }
  };

  const userLoged = (user) => {
    if (user) {
      userData.innerHTML = `
      <div class="relative group">
        <p id="logProfile" class="text-white cursor-default text-sm font-semibold hover:text-gray-300 transition-colors">
          ${user.user.name} ${user.user.lastName}
        </p>
        <!-- Dropdown -->
        <ul class="absolute right-0 mt-2 w-fit bg-gray-700 text-white rounded-md shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 z-10">
          <li><a href="/profile" class="block px-4 py-2 hover:bg-gray-600 hover:rounded-md">Perfil</a></li>
          <li>
            <form action="/api/sessions/logout" method="post">
              <button class="block w-full text-left px-4 py-2 hover:bg-red-600 hover:rounded-md" type="submit">Logout</button>
            </form>
          </li>
        </ul>
      </div>
      `;

      if (user.user.role === 'admin') {
        userData.innerHTML += `
        <a href="/realTimeProducts" class="text-white text-sm font-semibold hover:text-gray-300 transition-colors">Panel de administración</a>
        `;
      } else {
        userData.classList.replace('flex-row-reverse', 'flex-row');
        userData.innerHTML += `
        <a class="relative text-white text-sm font-semibold hover:text-gray-300 transition-colors" href="/cart">
          <svg class="w-6 h-6 inline-block" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" xmlns = "http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13l-1.5 6h13l-1.5-6M7 13h10m-6 4h.01M13 17h.01" />
          </svg>
          <span class="absolute -top-2 -right-5 bg-red-600 text-white text-xs font-bold rounded-full w-5 h-5 flex items-center justify-center">${user.cart.products.length}</span>
        </a>
        `;
      }
    } else {
      userData.innerHTML = `
        <a class="text-white text-sm font-semibold hover:text-gray-300 transition-colors" href="/login">
          Login
        </a>`;
    }
  };

  // configurar los botones de agregar productos
  const setupAddButtons = () => {
    const addButtons = Array.from(document.getElementsByClassName('addProduct'));

    addButtons.forEach(button => {
      button.addEventListener('click', async () => {
        const productId = button.id;

        if (!user) {
          alert('Necesitas estar autenticado para agregar productos a tu carrito');
          document.location.href = '/login';
          return;
        }

        if (user.user.role === 'admin') {
          alert('No puedes agregar productos a tu carrito como administrador');
          return;
        }

        try {
          const response = await fetch(`/api/carts/${user.cart._id}/products/${productId}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ quantity: 1 })
          });

          if (response.ok) {
            const result = await response.json();
            console.log('Producto agregado:', result);
            location.reload();
          } else {
            console.error('Error al agregar producto al carrito:', response.statusText);
          }
        } catch (error) {
          console.error(error.message);
        }
      });
    });
  };

  main();

</script>
