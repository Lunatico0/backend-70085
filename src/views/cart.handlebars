<header class="bg-gray-800 w-full shadow-md">
  <nav class="container w-3/4 mx-auto flex justify-between items-center">
    <div>
      <a href="/" class="text-lg text-white font-semibold">Shop</a>
    </div>
    <section class="flex justify-end items-center w-full max-w-6xl mx-auto py-2 px-4">
      <div id="userData" class="flex items-center space-x-6">
      </div>
    </section>
  </nav>
</header>

<main class="w-screen pt-6 flex flex-col justify-between h-full">
  <section class="text-white mx-auto w-3/4">
    <h1 class="text-white text-center text-xl">Carrito ID: <span class="font-bold">{{userData.cart}}</span></h1>
    <h2 class="text-2xl py-4">Productos en tu Carrito</h2>
    <div class="max-h-[600px] overflow-y-auto">
      {{#if products.length}}
      <ul class="flex flex-col gap-4">
        {{#each products}}
        <li class="rounded-lg flex p-2 items-center justify-between bg-gradient-to-b from-indigo-900 to-indigo-700">
          <div class="flex items-center gap-4">
            {{#if this.product.thumbnails.[0]}}
            <img class="rounded-lg w-32 h-32 object-cover"
              src="{{modifyImageUrl this.product.thumbnails.[0] '128' '128'}}" alt="{{this.product.title}}">
            {{else}}
            <img class="rounded-lg w-32 h-32 object-cover"
              src={{modifyImageUrl "https://lh5.googleusercontent.com/proxy/rb2Y5AO-zh1V9daKeQnqJkd9RlVzqDGob97ZzMX97-Z4w-w-haA79Y02m_X4tFgKaf5Fa2LvRYCe7DV8-JWB-QPjg6m9vOnNrPg1SU8TFC-vJXXnOR57QC746Txe2eO1dw1qPX9j7ch6fVM" '128' '128'
              }} alt="Imagen por defecto">
            {{/if}}
            <p class="font-bold">{{this.product.title}}</p>
          </div>
          <div class="flex items-center gap-4">
            <p class="w-fit">${{formatNumber this.product.price 2}}</p>
            <p class="w-1/10">x</p>
            <p class="w-fit">{{this.quantity}}u</p>
            <p class="w-fit">${{formatNumber (multiply this.product.price this.quantity) 2}}</p>
            <button onclick="deleteProduct('{{../userData.cart}}', '{{this.product._id}}')"
              class="bg-red-600 text-white px-3 py-1 rounded">Eliminar</button>
          </div>
        </li>
        {{/each}}
      </ul>
      {{else}}
      <p>Tu carrito está vacío.</p>
      {{/if}}
    </div>
  </section>

  <!-- Footer con botones y totales -->
  <footer class="flex flex-col items-center mt-4">
    <div class="flex justify-between w-3/4">
      <p class="text-white font-bold">Subtotal: ${{formatNumber (calculateSubtotal products) 2}}</p>
      <p class="text-white font-bold">Total: ${{formatNumber (calculateTotal products) 2}}</p>
    </div>
    <div class="flex justify-end w-3/4 gap-2 mt-4">
      <button class="bg-gray-600 text-white px-4 py-2 rounded" onclick="clearCart('{{userData.cart}}')">Borrar
        Todo</button>
      <form action="api/carts/{{userData.cart}}/purchase" method="post">
        <button type="submit" class="bg-green-600 text-white px-4 py-2 rounded">Finalizar Compra</button>
      </form>
    </div>
  </footer>
</main>

<script>
  const userData = document.getElementById("userData");

  async function deleteProduct(userCart, productId) {
    const response = await fetch(`/api/carts/${userCart}/products/${productId}`, {
      method: 'DELETE',
      credentials: 'include'
    });

    if (response.ok) {
      location.reload();
    } else {
      const errorText = await response.text();
      console.error(`Error al eliminar el producto: ${errorText}`);
    }
  }

  async function clearCart(userCart) {
    const response = await fetch(`/api/carts/${userCart}/empty`, {
      method: 'DELETE',
      credentials: 'include'
    });

    if (response.ok) {
      location.reload();
    } else {
      const errorText = await response.text();
      console.error(`Error al vaciar el carrito: ${errorText}`);
    }
  }

  const userLoged = (user) => {
    if (user) {
      userData.innerHTML = `
      <div class="relative group">
        <p id="logProfile" class="text-white text-sm font-semibold hover:text-gray-300 transition-colors cursor-default">
          ${user.user.name} ${user.user.lastName}
        </p>
        <!-- Dropdown -->
        <ul class="absolute right-0 mt-2 w-fit bg-gray-700 text-white rounded-md shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 z-10">
          <li><a href="/profile" class="block px-4 py-2 hover:bg-gray-600 hover:rounded-md">Perfil</a></li>
          <li>
            <form action="/api/sessions/logout" method="post">
              <button class="block w-full text-left px-4 py-2 hover:bg-red-600 hover:rounded-md" type="submit">Logout</button>
            </form>
          </li>
        </ul>
      </div>
      `;

      if (user.user.role === 'admin') {
        userData.innerHTML += `
        <a href="/realTimeProducts" class="text-white text-sm font-semibold hover:text-gray-300 transition-colors">Panel de administración</a>
        `;
      } else {
        userData.classList.replace('flex-row-reverse', 'flex-row');
        userData.innerHTML += `
        <a class="relative text-white text-sm font-semibold hover:text-gray-300 transition-colors" href="/cart">
          <svg class="w-6 h-6 inline-block" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" xmlns = "http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13l-1.5 6h13l-1.5-6M7 13h10m-6 4h.01M13 17h.01" />
          </svg>
          <span class="absolute -top-2 -right-5 bg-red-600 text-white text-xs font-bold rounded-full w-5 h-5 flex items-center justify-center">${user.cart.products.length}</span>
        </a>
        `;
      }
    }
  };

  const main = async () => {
    let res;
    try {
      res = await fetch('http://localhost:8080/api/sessions/current', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
        credentials: 'include'
      });
      const responseData = await res.json();
      user = responseData;
      userLoged(user);
    } catch (error) {
      console.error('Error handling the request:', error);
    }
  };
  main();
</script>
