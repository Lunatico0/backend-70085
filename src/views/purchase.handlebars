<header class="bg-gray-800 w-full h-10 flex justify-between shadow-md">
  <nav class="container w-3/4 mx-auto flex justify-between items-center">
    <div>
      <a href="/" class="text-lg text-white font-semibold">Shop</a>
    </div>
    <section class="flex justify-end items-center gap-8 w-full max-w-6xl mx-auto py-2 px-4">
      <div class="flex {{#ifCond user.role '==' 'user'}}flex-row-reverse{{else}}flex-row{{/ifCond}} items-center gap-6 relative">
        {{#if user}}
        {{#ifCond user.role '==' 'admin'}}
        <a href="/realTimeProducts" class="text-white text-sm font-semibold hover:text-gray-300 transition-colors">Panel
          de administración</a>
        {{else}}
        <a id="cartLink" class="relative text-white text-sm font-semibold hover:text-gray-300 transition-colors"
          href="/cart">
          <svg class="w-6 h-6 inline-block" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round"
              d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13l-1.5 6h13l-1.5-6M7 13h10m-6 4h.01M13 17h.01" />
          </svg>
          <span
            class="absolute -top-2 -right-5 bg-red-600 text-white text-xs font-bold rounded-full w-5 h-5 flex items-center justify-center">{{cart.products.length}}</span>
        </a>
        {{/ifCond}}
        <div class="relative group">
          <p id="logProfile"
            class="text-white text-sm font-semibold hover:text-gray-300 transition-colors cursor-pointer">{{user.name}}
            {{user.lastName}}</p>
          <!-- Dropdown menu -->
          <ul
            class="absolute w-fit right-0 mt-2 bg-gray-700 text-white rounded-md shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 z-10">
            <li><a href="/profile" class="block px-4 py-2 hover:bg-gray-600 hover:rounded-md">Perfil</a></li>
            <li>
              <form action="/api/sessions/logout" method="post">
                <button class="block w-full text-left px-4 py-2 hover:bg-red-600 hover:rounded-md"
                  type="submit">Logout</button>
              </form>
            </li>
          </ul>
        </div>
        {{else}}
        <a id="logProfile" class="text-white text-sm font-semibold hover:text-gray-300 transition-colors"
          href="/login">Login</a>
        {{/if}}
      </div>
    </section>
  </nav>
</header>

<section
  style="max-width: 640px; width: 100%; margin: 2rem auto; background-color: white; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); border-radius: 0.5rem; padding: 1.5rem;">
  <h2
    style="font-size: 1.5rem; font-weight: bold; color: #2d3748; border-bottom: 2px solid #e2e8f0; padding-bottom: 0.5rem; margin-bottom: 1rem;">
    Detalle de tu compra</h2>

  <!-- Ticket ID -->
  <div style="margin-bottom: 1rem; display: flex; justify-content: space-between;">
    <p style="font-size: 0.875rem; color: #718096;">ID del ticket:</p>
    <p style="font-size: 1rem; font-weight: 600; color: #2d3748;">{{purchase._id}}</p>
  </div>

  <div style="margin-bottom: 1rem; display: flex; justify-content: space-between;">
    <p style="font-size: 0.875rem; color: #718096;">Código de la compra:</p>
    <p style="font-size: 1rem; font-weight: 600; color: #2d3748;">{{purchase.code}}</p>
  </div>

  <hr style="margin: 1rem 0; border-color: #e2e8f0;">

  <!-- Datos del comprador -->
  <div style="margin-bottom: 1rem;">
    <p style="font-size: 0.875rem; color: #718096;">Datos del comprador:</p>
    <p style="font-size: 1.125rem; font-weight: 600; color: #2d3748;">Nombre: {{user.lastName}} {{user.name}}</p>
    <p style="font-size: 1.125rem; font-weight: 600; color: #2d3748;">Email: {{user.email}}</p>
    <p style="font-size: 0.875rem; color: #a0aec0;">
      <time datetime="{{purchase.purchase_datetime}}" id="purchaseDate">
        {{purchase.purchase_datetime}}
      </time>
    </p>
  </div>

  <hr style="margin: 1rem 0; border-color: #e2e8f0;">

  <!-- Detalle de la compra -->
  <p style="font-size: 0.875rem; color: #718096;">Detalle de la compra:</p>
  <div style="margin-bottom: 1.5rem; max-height: 16rem; overflow-y: auto;">
    <ul style="margin-right: 0.5rem; list-style: none; padding-left: 0;">
      {{#each products}}
      <li style="margin-bottom: 1rem;">
        <table style="width: 100%;">
          <tr>
            <td
              style="width: 70%; font-size: 1.125rem; font-weight: 600; color: #2d3748; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; max-width: 320px;">
              {{this._doc.title}}</td>
            <td style="width: 15%; font-size: 1.125rem; font-weight: 600; color: #2d3748;">{{this.quantity}}</td>
            <td style="width: 15%; font-size: 1.125rem; font-weight: 600; color: #2d3748;">${{formatNumber (multiply
              this._doc.price this.quantity) 2}}</td>
          </tr>
        </table>
      </li>
      {{/each}}
    </ul>
  </div>

  <hr style="margin: 1rem 0; border-color: #e2e8f0;">

  <!-- Total -->
  <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 1.5rem;">
    <p style="font-size: 1.25rem; font-weight: bold; color: #2d3748;">Total:</p>
    <p style="font-size: 1.5rem; font-weight: bold; color: #38a169;">${{formatNumber purchase.amount 2}}</p>
  </div>
</section>



<script>
  const cartLink = document.getElementById("cartLink");
  const logProfile = document.getElementById("logProfile");
  const purchaseDateElement = document.getElementById('purchaseDate');

  const purchaseDate = new Date(purchaseDateElement.getAttribute('datetime'));

  const options = {
    weekday: 'short',
    day: 'numeric',
    month: 'short',
    year: 'numeric',
    hour: 'numeric',
    minute: 'numeric',
    second: 'numeric'
  };

  const formattedDate = new Intl.DateTimeFormat('es-ES', options).format(purchaseDate);

  purchaseDateElement.innerText = `${formattedDate} (Hora Local)`;

  const userLoged = (user) => {
    try {
      if (user) {
        logProfile.innerText = `${user.user.name} ${user.user.lastName}`;
        logProfile.href = `/profile`;
        cartLink.innerHTML = `<svg style="width: 24px; height: 24px; inline-block" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13l-1.5 6h13l-1.5-6M7 13h10m-6 4h.01M13 17h.01" />
        </svg>
        <span style="position: absolute; top: -0.5rem; right: -1.25rem; background-color: #e53e3e; color: white; font-size: 0.75rem; font-weight: bold; border-radius: 9999px; width: 1.25rem; height: 1.25rem; display: flex; align-items: center; justify-content: center;">${user.cart.products.length}</span>`;
      }
    } catch (error) {
      console.log(error.message);
    }
  };

  const main = async () => {
    let res;
    try {
      res = await fetch('http://localhost:8080/api/sessions/current', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
        credentials: 'include'  // Incluir las cookies en la petición
      });
      const responseData = await res.json();
      user = responseData;  // Asignar el usuario autenticado
      console.log(user)
      userLoged(user);
    } catch (error) {
      console.error('Error handling the request:', error);
      setupAddButtons(); // Asegúrate de configurar los botones
    }
  };
  main();
</script>
